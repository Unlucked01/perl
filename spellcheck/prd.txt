

# Проектная документация (PRD)

## 1. Введение

Данный документ описывает требования и план реализации системы проверки правописания на языке Perl. Система будет анализировать текст, сравнивать слова с содержимым словаря и предлагать исправления для слов с ошибками. Система также будет обучаемой, позволяя добавлять новые слова в словарь.

## 2. Цели проекта

- Разработать CGI-программу для проверки правописания в текстовых документах
- Реализовать алгоритм определения схожести слов (не менее 80%)
- Обеспечить интерактивное взаимодействие с пользователем для подтверждения замен
- Реализовать функцию обучения системы (добавление новых слов в словарь)
- Разработать вспомогательные CGI-программы для управления словарем

## 3. Функциональные требования

### 3.1. Основная функциональность

- **Проверка правописания**:
  - Загрузка текстового файла для проверки
  - Анализ слов в тексте и сравнение их со словарем
  - Определение слов с ошибками (не совпадающих со словарем)
  - Поиск схожих слов в словаре (схожесть не менее 80%)
  - Предложение вариантов замены для слов с ошибками

- **Интерактивное исправление**:
  - Отображение списка предлагаемых замен в виде HTML-документа
  - Возможность подтверждения предложенной замены
  - Возможность отклонения замены
  - Возможность ввода собственного варианта написания

- **Обучение системы**:
  - Добавление новых слов в словарь по решению пользователя
  - Сохранение внесенных изменений в словаре

### 3.2. Управление словарем

- **Просмотр словаря**:
  - Отображение всех слов в словаре
  - Поиск слов в словаре

- **Редактирование словаря**:
  - Добавление новых слов в словарь
  - Удаление слов из словаря
  - Редактирование существующих слов

## 4. Технические требования

### 4.1. Архитектура системы

- **Серверная часть**:
  - CGI-программы на языке Perl
  - Модули для работы с базой данных словаря
  - Модули для анализа текста и определения схожести слов

- **Клиентская часть**:
  - HTML-страницы для взаимодействия с пользователем
  - JavaScript для обработки действий пользователя

### 4.2. Хранение данных

- **Словарь**:
  - Использование файла базы данных для хранения словаря
  - Структура записи: слово, дата добавления

- **Временные данные**:
  - Хранение загруженного текста во временном файле
  - Хранение результатов проверки для формирования отчета

### 4.3. Алгоритмы

- **Алгоритм определения схожести слов**:
  - Использование алгоритма Левенштейна для вычисления расстояния редактирования
  - Нормализация расстояния относительно длины слова
  - Определение схожести по формуле: схожесть = 1 - (расстояние / max(длина_слова1, длина_слова2))
  - Порог схожести: 80%

## 5. Пользовательский интерфейс

### 5.1. Главная страница

- Заголовок системы
- Форма для загрузки файла
- Кнопка "Проверить правописание"
- Ссылка на страницу управления словарем

### 5.2. Страница результатов проверки

- Отображение проверяемого текста
- Выделение слов с ошибками
- Для каждого слова с ошибкой:
  - Предлагаемые варианты замены
  - Кнопка "Заменить"
  - Кнопка "Пропустить"
  - Поле для ввода собственного варианта
  - Кнопка "Добавить в словарь"
- Кнопка "Применить все изменения"
- Кнопка "Сохранить результат"

### 5.3. Страница управления словарем

- Список слов в словаре с пагинацией
- Поле поиска по словарю
- Форма для добавления нового слова
- Кнопки редактирования и удаления для каждого слова

## 6. Процесс работы системы

1. Пользователь загружает текстовый файл для проверки
2. Система анализирует текст и находит слова, отсутствующие в словаре
3. Для каждого слова с ошибкой система находит схожие слова в словаре
4. Система формирует HTML-страницу с результатами проверки и предложениями по замене
5. Пользователь просматривает предложения и принимает решения:
   - Подтверждает предложенную замену
   - Отклоняет замену
   - Вводит собственный вариант
   - Добавляет слово в словарь
6. Система применяет выбранные пользователем изменения к тексту
7. Пользователь сохраняет исправленный текст

## 7. План реализации

1. **Подготовительный этап**:
   - Анализ существующего кода и структуры проекта
   - Проектирование архитектуры системы
   - Разработка структуры базы данных словаря

2. **Разработка основных компонентов**:
   - Реализация модуля для работы со словарем
   - Реализация алгоритма определения схожести слов
   - Разработка CGI-программы для проверки правописания
   - Разработка CGI-программ для управления словарем

3. **Разработка пользовательского интерфейса**:
   - Создание HTML-шаблонов для всех страниц
   - Реализация JavaScript-функций для обработки действий пользователя

4. **Тестирование и отладка**:
   - Модульное тестирование компонентов
   - Интеграционное тестирование системы
   - Исправление выявленных ошибок

5. **Документирование**:
   - Подготовка документации по использованию системы
   - Подготовка технической документации

## 8. Требования к окружению

- Веб-сервер с поддержкой CGI (Apache, Nginx)
- Perl 5.10 или выше
- Модули Perl:
  - DB_File
  - CGI
  - CGI::Carp
  - Encode
  - File::Basename

## 9. Заключение

Данная система проверки правописания будет предоставлять пользователям удобный инструмент для анализа и исправления ошибок в текстовых документах. Благодаря алгоритму определения схожести слов и возможности обучения, система будет постоянно совершенствоваться и адаптироваться к потребностям пользователей.
